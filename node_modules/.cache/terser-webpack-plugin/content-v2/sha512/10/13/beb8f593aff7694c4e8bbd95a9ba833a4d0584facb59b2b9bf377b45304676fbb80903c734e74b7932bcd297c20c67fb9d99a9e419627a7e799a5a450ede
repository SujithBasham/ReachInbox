{"map":"{\"version\":3,\"sources\":[\"C:/Users/sujit/Desktop/ReachInbox/src/components/Login.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/AuthHandler.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/Sidebar.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/EmailList.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/EmailDetails.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/ReplyEditor.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/DarkModeToggle.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/components/Onebox.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/App.js\",\"C:/Users/sujit/Desktop/ReachInbox/src/index.js\"],\"names\":[\"Login\",\"React\",\"createElement\",\"className\",\"src\",\"alt\",\"onClick\",\"handleLogin\",\"window\",\"location\",\"href\",\"useNavigate\",\"AuthHandler\",\"history\",\"useHistory\",\"useEffect\",\"urlParams\",\"URLSearchParams\",\"search\",\"token\",\"get\",\"userEmail\",\"userName\",\"localStorage\",\"setItem\",\"push\",\"alert\",\"Sidebar\",\"EmailList\",\"_ref\",\"onSelectEmail\",\"emails\",\"setEmails\",\"useState\",\"error\",\"setError\",\"async\",\"getItem\",\"response\",\"fetch\",\"headers\",\"Authorization\",\"data\",\"json\",\"status\",\"err\",\"fetchEmails\",\"map\",\"email\",\"key\",\"id\",\"subject\",\"fromName\",\"Date\",\"sentAt\",\"toLocaleDateString\",\"EmailDetails\",\"emailDetails\",\"setEmailDetails\",\"threadId\",\"fetchEmailDetails\",\"Fragment\",\"fromEmail\",\"toName\",\"toEmail\",\"toLocaleString\",\"dangerouslySetInnerHTML\",\"__html\",\"body\",\"ReplyEditor\",\"onSendReply\",\"replyBody\",\"setReplyBody\",\"value\",\"onChange\",\"e\",\"target\",\"placeholder\",\"replyData\",\"to\",\"from\",\"inReplyTo\",\"messageId\",\"references\",\"method\",\"Content-Type\",\"JSON\",\"stringify\",\"DarkModeToggle\",\"toggleDarkMode\",\"type\",\"Onebox\",\"selectedEmail\",\"setSelectedEmail\",\"darkMode\",\"setDarkMode\",\"handleSendReply\",\"App\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\nimport './Login.css'; // Assuming you'll add custom styles in a CSS file\\r\\n\\r\\nconst Login = () => {\\r\\n    // Function to handle the Google login\\r\\n    const handleLogin = () => {\\r\\n        // Redirect the user to the Google login page\\r\\n        window.location.href = 'https://hiring.reachinbox.xyz/api/v1/auth/google-login?redirect_to=http://your-frontend.com/auth';\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"login-container\\\">\\r\\n            <div className=\\\"login-box\\\">\\r\\n                <img src=\\\"/logo.png\\\" alt=\\\"Reachinbox Logo\\\" className=\\\"logo\\\" />\\r\\n                <h1 className=\\\"login-title\\\">Create a new account</h1>\\r\\n                <button className=\\\"google-signup\\\" onClick={handleLogin}>\\r\\n                    <img src=\\\"/google-icon.png\\\" alt=\\\"Google Icon\\\" /> Sign Up with Google\\r\\n                </button>\\r\\n                <button className=\\\"create-account\\\">Create an Account</button>\\r\\n                <p className=\\\"signin-text\\\">\\r\\n                    Already have an account? <a href=\\\"/signin\\\">Sign In</a>\\r\\n                </p>\\r\\n            </div>\\r\\n            <footer className=\\\"login-footer\\\">\\r\\n                &copy; 2023 Reachinbox. All rights reserved.\\r\\n            </footer>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Login;\\r\\n\",\"// AuthHandler.js\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\n\\r\\nconst navigate = useNavigate();\\r\\n\\r\\nconst AuthHandler = () => {\\r\\n    const history = useHistory();\\r\\n\\r\\n    useEffect(() => {\\r\\n        // Extract token from URL\\r\\n        const urlParams = new URLSearchParams(window.location.search);\\r\\n        const token = urlParams.get('token');\\r\\n        const userEmail = urlParams.get('email'); // Assuming the email is passed in the URL\\r\\n        const userName = urlParams.get('name');   // Assuming the name is passed in the URL\\r\\n\\r\\n        if (token) {\\r\\n            // Store the token in localStorage\\r\\n            localStorage.setItem('bearerToken', token);\\r\\n\\r\\n            // Store the user's email and name in localStorage\\r\\n            if (userEmail) localStorage.setItem('userEmail', userEmail);\\r\\n            if (userName) localStorage.setItem('userName', userName);\\r\\n\\r\\n            // Redirect to the main application page (e.g., Onebox)\\r\\n            history.push('/onebox');\\r\\n        } else {\\r\\n            // Handle error if token is missing\\r\\n            alert('Login failed. No token received.');\\r\\n        }\\r\\n    }, [history]);\\r\\n\\r\\n    return <div>Logging you in...</div>;\\r\\n};\\r\\n\\r\\nexport default AuthHandler;\\r\\n\",\"import React from 'react';\\r\\nimport './Sidebar.css';\\r\\n\\r\\nconst Sidebar = () => {\\r\\n    return (\\r\\n        <div className=\\\"sidebar\\\">\\r\\n            <div className=\\\"sidebar-item\\\">\\r\\n                <img src=\\\"/icons/home-icon.png\\\" alt=\\\"Home\\\" />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-item\\\">\\r\\n                <img src=\\\"/icons/inbox-icon.png\\\" alt=\\\"Inbox\\\" />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-item\\\">\\r\\n                <img src=\\\"/icons/sent-icon.png\\\" alt=\\\"Sent\\\" />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-item\\\">\\r\\n                <img src=\\\"/icons/drafts-icon.png\\\" alt=\\\"Drafts\\\" />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-item\\\">\\r\\n                <img src=\\\"/icons/trash-icon.png\\\" alt=\\\"Trash\\\" />\\r\\n            </div>\\r\\n            {/* Add more icons as necessary */}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Sidebar;\\r\\n\",\"import React, { useEffect, useState } from 'react';\\r\\nimport './EmailList.css';\\r\\n\\r\\nconst EmailList = ({ onSelectEmail }) => {\\r\\n    const [emails, setEmails] = useState([]);\\r\\n    const [error, setError] = useState(null);\\r\\n\\r\\n    useEffect(() => {\\r\\n        const fetchEmails = async () => {\\r\\n            const token = localStorage.getItem('bearerToken'); // Get the token from localStorage\\r\\n\\r\\n            if (!token) {\\r\\n                alert(\\\"You're not logged in!\\\");\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            try {\\r\\n                const response = await fetch('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\\r\\n                    headers: {\\r\\n                        'Authorization': `Bearer ${token}`,\\r\\n                    },\\r\\n                });\\r\\n                const data = await response.json();\\r\\n                if (data.status === 200) {\\r\\n                    setEmails(data.data);\\r\\n                } else {\\r\\n                    setError(\\\"Failed to fetch emails.\\\");\\r\\n                }\\r\\n            } catch (err) {\\r\\n                setError(\\\"An error occurred while fetching emails.\\\");\\r\\n            }\\r\\n        };\\r\\n\\r\\n        fetchEmails();\\r\\n    }, []);\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"email-list\\\">\\r\\n            {error && <div className=\\\"error\\\">{error}</div>}\\r\\n            {emails.map(email => (\\r\\n                <div \\r\\n                    key={email.id} \\r\\n                    className=\\\"email-item\\\" \\r\\n                    onClick={() => onSelectEmail(email)}\\r\\n                >\\r\\n                    <p className=\\\"email-subject\\\">{email.subject}</p>\\r\\n                    <p className=\\\"email-from\\\">{email.fromName} - {new Date(email.sentAt).toLocaleDateString()}</p>\\r\\n                </div>\\r\\n            ))}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default EmailList;\\r\\n\",\"import React, { useEffect, useState } from 'react';\\r\\nimport './EmailDetails.css';\\r\\n\\r\\nconst EmailDetails = ({ email }) => {\\r\\n    const [emailDetails, setEmailDetails] = useState(null);\\r\\n    const [error, setError] = useState(null);\\r\\n\\r\\n    useEffect(() => {\\r\\n        const fetchEmailDetails = async () => {\\r\\n            try {\\r\\n                const response = await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/${email.threadId}`, {\\r\\n                    headers: {\\r\\n                        'Authorization': `Bearer YOUR_BEARER_TOKEN`,\\r\\n                    },\\r\\n                });\\r\\n                const data = await response.json();\\r\\n                if (data.status === 200) {\\r\\n                    setEmailDetails(data.data);\\r\\n                } else {\\r\\n                    setError(\\\"Failed to fetch email details.\\\");\\r\\n                }\\r\\n            } catch (err) {\\r\\n                setError(\\\"An error occurred while fetching email details.\\\");\\r\\n            }\\r\\n        };\\r\\n\\r\\n        fetchEmailDetails();\\r\\n    }, [email.threadId]);\\r\\n\\r\\n    if (error) {\\r\\n        return <div className=\\\"error\\\">{error}</div>;\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"email-details\\\">\\r\\n            {emailDetails ? (\\r\\n                <>\\r\\n                    <h2>{emailDetails.subject}</h2>\\r\\n                    <p><strong>From:</strong> {emailDetails.fromName} ({emailDetails.fromEmail})</p>\\r\\n                    <p><strong>To:</strong> {emailDetails.toName ? emailDetails.toName : \\\"You\\\"} ({emailDetails.toEmail})</p>\\r\\n                    <p><strong>Sent At:</strong> {new Date(emailDetails.sentAt).toLocaleString()}</p>\\r\\n                    <div className=\\\"email-body\\\" dangerouslySetInnerHTML={{ __html: emailDetails.body }} />\\r\\n                </>\\r\\n            ) : (\\r\\n                <p>Loading...</p>\\r\\n            )}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default EmailDetails;\\r\\n\",\"import React, { useState } from 'react';\\r\\nimport './ReplyEditor.css';\\r\\n\\r\\nconst ReplyEditor = ({ email, onSendReply }) => {\\r\\n    const [replyBody, setReplyBody] = useState('');\\r\\n\\r\\n    // Retrieve the user's email and name from localStorage\\r\\n    const userEmail = localStorage.getItem('userEmail');\\r\\n    const userName = localStorage.getItem('userName');\\r\\n\\r\\n    const handleSendReply = async () => {\\r\\n        const replyData = {\\r\\n            toName: email.fromName,\\r\\n            to: email.fromEmail,\\r\\n            from: userEmail, // Use the user's email stored in localStorage\\r\\n            fromName: userName, // Use the user's name stored in localStorage\\r\\n            subject: `Re: ${email.subject}`,\\r\\n            body: replyBody,\\r\\n            inReplyTo: email.messageId,\\r\\n            references: [email.messageId],\\r\\n        };\\r\\n\\r\\n        try {\\r\\n            const response = await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/reply/${email.threadId}`, {\\r\\n                method: 'POST',\\r\\n                headers: {\\r\\n                    'Authorization': `Bearer ${localStorage.getItem('bearerToken')}`,\\r\\n                    'Content-Type': 'application/json',\\r\\n                },\\r\\n                body: JSON.stringify(replyData),\\r\\n            });\\r\\n\\r\\n            const data = await response.json();\\r\\n            if (data.status === 200) {\\r\\n                onSendReply();\\r\\n            } else {\\r\\n                alert(\\\"Failed to send reply.\\\");\\r\\n            }\\r\\n        } catch (error) {\\r\\n            alert(\\\"An error occurred while sending the reply.\\\");\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"reply-editor\\\">\\r\\n            <textarea \\r\\n                value={replyBody} \\r\\n                onChange={(e) => setReplyBody(e.target.value)} \\r\\n                placeholder=\\\"Write your reply here...\\\"\\r\\n            />\\r\\n            <button onClick={handleSendReply}>Send</button>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default ReplyEditor;\\r\\n\",\"// src/components/DarkModeToggle.js\\r\\nimport React from 'react';\\r\\n\\r\\nconst DarkModeToggle = ({ toggleDarkMode }) => {\\r\\n  return (\\r\\n    <div className=\\\"dark-mode-toggle\\\">\\r\\n      <label>\\r\\n        Dark Mode\\r\\n        <input type=\\\"checkbox\\\" onChange={toggleDarkMode} />\\r\\n      </label>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default DarkModeToggle;\\r\\n\",\"import React, { useState } from 'react';\\r\\nimport Sidebar from './Sidebar';\\r\\nimport EmailList from './EmailList';\\r\\nimport EmailDetails from './EmailDetails';\\r\\nimport ReplyEditor from './ReplyEditor';\\r\\nimport DarkModeToggle from './DarkModeToggle';\\r\\nimport './Onebox.css';\\r\\n\\r\\nconst Onebox = () => {\\r\\n    const [selectedEmail, setSelectedEmail] = useState(null);\\r\\n    const [darkMode, setDarkMode] = useState(false);\\r\\n\\r\\n    const handleSelectEmail = (email) => {\\r\\n        setSelectedEmail(email);\\r\\n    };\\r\\n\\r\\n    const handleSendReply = () => {\\r\\n        // Clear selected email after sending reply\\r\\n        setSelectedEmail(null);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className={`onebox-container ${darkMode ? 'dark' : 'light'}`}>\\r\\n            <Sidebar />\\r\\n            <div className=\\\"main-content\\\">\\r\\n                <div className=\\\"top-bar\\\">\\r\\n                    <div className=\\\"workspace-title\\\">Onebox</div>\\r\\n                    <DarkModeToggle darkMode={darkMode} setDarkMode={setDarkMode} />\\r\\n                    <div className=\\\"workspace-name\\\">Tim's Workspace</div>\\r\\n                </div>\\r\\n                <div className=\\\"content\\\">\\r\\n                    <EmailList onSelectEmail={handleSelectEmail} />\\r\\n                    {selectedEmail ? (\\r\\n                        <>\\r\\n                            <EmailDetails email={selectedEmail} />\\r\\n                            <ReplyEditor email={selectedEmail} onSendReply={handleSendReply} />\\r\\n                        </>\\r\\n                    ) : (\\r\\n                        <div className=\\\"no-email-selected\\\">\\r\\n                            <img src=\\\"/inbox-empty.png\\\" alt=\\\"No Emails\\\" className=\\\"empty-inbox-image\\\" />\\r\\n                            <p>It's the beginning of a legendary sales pipeline</p>\\r\\n                            <p>When you have inbound E-mails you'll see them here</p>\\r\\n                        </div>\\r\\n                    )}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Onebox;\\r\\n\",\"import React from 'react';\\r\\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\\r\\nimport Login from './components/Login';\\r\\nimport AuthHandler from './components/AuthHandler';\\r\\nimport Onebox from './components/Onebox';\\r\\n\\r\\nfunction App() {\\r\\n    return (\\r\\n        <Router>\\r\\n            <Routes>\\r\\n                <Route path=\\\"/\\\" element={<Login />} />\\r\\n                <Route path=\\\"/auth\\\" element={<AuthHandler />} />\\r\\n                <Route path=\\\"/onebox\\\" element={<Onebox />} />\\r\\n            </Routes>\\r\\n        </Router>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default App;  // Make sure this line exists\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport App from './App';\\r\\nimport './styles/styles.css';\\r\\n\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(<App />);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,a,t){e.exports=t(22)},,,,,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var n=t(0),l=t.n(n),r=t(6),c=t.n(r),o=t(4),i=t(2);t(15);var m=()=>{return l.a.createElement(\"div\",{className:\"login-container\"},l.a.createElement(\"div\",{className:\"login-box\"},l.a.createElement(\"img\",{src:\"/logo.png\",alt:\"Reachinbox Logo\",className:\"logo\"}),l.a.createElement(\"h1\",{className:\"login-title\"},\"Create a new account\"),l.a.createElement(\"button\",{className:\"google-signup\",onClick:()=>{window.location.href=\"https://hiring.reachinbox.xyz/api/v1/auth/google-login?redirect_to=http://your-frontend.com/auth\"}},l.a.createElement(\"img\",{src:\"/google-icon.png\",alt:\"Google Icon\"}),\" Sign Up with Google\"),l.a.createElement(\"button\",{className:\"create-account\"},\"Create an Account\"),l.a.createElement(\"p\",{className:\"signin-text\"},\"Already have an account? \",l.a.createElement(\"a\",{href:\"/signin\"},\"Sign In\"))),l.a.createElement(\"footer\",{className:\"login-footer\"},\"\\xa9 2023 Reachinbox. All rights reserved.\"))};Object(i.o)();var s=()=>{const e=useHistory();return useEffect(()=>{const a=new URLSearchParams(window.location.search),t=a.get(\"token\"),n=a.get(\"email\"),l=a.get(\"name\");t?(localStorage.setItem(\"bearerToken\",t),n&&localStorage.setItem(\"userEmail\",n),l&&localStorage.setItem(\"userName\",l),e.push(\"/onebox\")):alert(\"Login failed. No token received.\")},[e]),React.createElement(\"div\",null,\"Logging you in...\")};t(16);var u=()=>l.a.createElement(\"div\",{className:\"sidebar\"},l.a.createElement(\"div\",{className:\"sidebar-item\"},l.a.createElement(\"img\",{src:\"/icons/home-icon.png\",alt:\"Home\"})),l.a.createElement(\"div\",{className:\"sidebar-item\"},l.a.createElement(\"img\",{src:\"/icons/inbox-icon.png\",alt:\"Inbox\"})),l.a.createElement(\"div\",{className:\"sidebar-item\"},l.a.createElement(\"img\",{src:\"/icons/sent-icon.png\",alt:\"Sent\"})),l.a.createElement(\"div\",{className:\"sidebar-item\"},l.a.createElement(\"img\",{src:\"/icons/drafts-icon.png\",alt:\"Drafts\"})),l.a.createElement(\"div\",{className:\"sidebar-item\"},l.a.createElement(\"img\",{src:\"/icons/trash-icon.png\",alt:\"Trash\"})));t(17);var d=e=>{let{onSelectEmail:a}=e;const[t,r]=Object(n.useState)([]),[c,o]=Object(n.useState)(null);return Object(n.useEffect)(()=>{(async()=>{const e=localStorage.getItem(\"bearerToken\");if(e)try{const t=await fetch(\"https://hiring.reachinbox.xyz/api/v1/onebox/list\",{headers:{Authorization:`Bearer ${e}`}}),n=await t.json();200===n.status?r(n.data):o(\"Failed to fetch emails.\")}catch(a){o(\"An error occurred while fetching emails.\")}else alert(\"You're not logged in!\")})()},[]),l.a.createElement(\"div\",{className:\"email-list\"},c&&l.a.createElement(\"div\",{className:\"error\"},c),t.map(e=>l.a.createElement(\"div\",{key:e.id,className:\"email-item\",onClick:()=>a(e)},l.a.createElement(\"p\",{className:\"email-subject\"},e.subject),l.a.createElement(\"p\",{className:\"email-from\"},e.fromName,\" - \",new Date(e.sentAt).toLocaleDateString()))))};t(18);var g=e=>{let{email:a}=e;const[t,r]=Object(n.useState)(null),[c,o]=Object(n.useState)(null);return Object(n.useEffect)(()=>{(async()=>{try{const t=await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/${a.threadId}`,{headers:{Authorization:\"Bearer YOUR_BEARER_TOKEN\"}}),n=await t.json();200===n.status?r(n.data):o(\"Failed to fetch email details.\")}catch(e){o(\"An error occurred while fetching email details.\")}})()},[a.threadId]),c?l.a.createElement(\"div\",{className:\"error\"},c):l.a.createElement(\"div\",{className:\"email-details\"},t?l.a.createElement(l.a.Fragment,null,l.a.createElement(\"h2\",null,t.subject),l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,\"From:\"),\" \",t.fromName,\" (\",t.fromEmail,\")\"),l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,\"To:\"),\" \",t.toName?t.toName:\"You\",\" (\",t.toEmail,\")\"),l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,\"Sent At:\"),\" \",new Date(t.sentAt).toLocaleString()),l.a.createElement(\"div\",{className:\"email-body\",dangerouslySetInnerHTML:{__html:t.body}})):l.a.createElement(\"p\",null,\"Loading...\"))};t(19);var E=e=>{let{email:a,onSendReply:t}=e;const[r,c]=Object(n.useState)(\"\"),o=localStorage.getItem(\"userEmail\"),i=localStorage.getItem(\"userName\");return l.a.createElement(\"div\",{className:\"reply-editor\"},l.a.createElement(\"textarea\",{value:r,onChange:e=>c(e.target.value),placeholder:\"Write your reply here...\"}),l.a.createElement(\"button\",{onClick:async()=>{const e={toName:a.fromName,to:a.fromEmail,from:o,fromName:i,subject:`Re: ${a.subject}`,body:r,inReplyTo:a.messageId,references:[a.messageId]};try{const l=await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/reply/${a.threadId}`,{method:\"POST\",headers:{Authorization:`Bearer ${localStorage.getItem(\"bearerToken\")}`,\"Content-Type\":\"application/json\"},body:JSON.stringify(e)});200===(await l.json()).status?t():alert(\"Failed to send reply.\")}catch(n){alert(\"An error occurred while sending the reply.\")}}},\"Send\"))};var h=e=>{let{toggleDarkMode:a}=e;return l.a.createElement(\"div\",{className:\"dark-mode-toggle\"},l.a.createElement(\"label\",null,\"Dark Mode\",l.a.createElement(\"input\",{type:\"checkbox\",onChange:a})))};t(20);var p=()=>{const[e,a]=Object(n.useState)(null),[t,r]=Object(n.useState)(!1);return l.a.createElement(\"div\",{className:`onebox-container ${t?\"dark\":\"light\"}`},l.a.createElement(u,null),l.a.createElement(\"div\",{className:\"main-content\"},l.a.createElement(\"div\",{className:\"top-bar\"},l.a.createElement(\"div\",{className:\"workspace-title\"},\"Onebox\"),l.a.createElement(h,{darkMode:t,setDarkMode:r}),l.a.createElement(\"div\",{className:\"workspace-name\"},\"Tim's Workspace\")),l.a.createElement(\"div\",{className:\"content\"},l.a.createElement(d,{onSelectEmail:e=>{a(e)}}),e?l.a.createElement(l.a.Fragment,null,l.a.createElement(g,{email:e}),l.a.createElement(E,{email:e,onSendReply:()=>{a(null)}})):l.a.createElement(\"div\",{className:\"no-email-selected\"},l.a.createElement(\"img\",{src:\"/inbox-empty.png\",alt:\"No Emails\",className:\"empty-inbox-image\"}),l.a.createElement(\"p\",null,\"It's the beginning of a legendary sales pipeline\"),l.a.createElement(\"p\",null,\"When you have inbound E-mails you'll see them here\")))))};var b=function(){return l.a.createElement(o.a,null,l.a.createElement(i.c,null,l.a.createElement(i.a,{path:\"/\",element:l.a.createElement(m,null)}),l.a.createElement(i.a,{path:\"/auth\",element:l.a.createElement(s,null)}),l.a.createElement(i.a,{path:\"/onebox\",element:l.a.createElement(p,null)})))};t(21);c.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(b,null))}],[[7,1,2]]]);","extractedComments":[]}