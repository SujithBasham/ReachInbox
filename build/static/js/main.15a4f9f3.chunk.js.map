{"version":3,"sources":["components/Login.js","components/AuthHandler.js","components/Sidebar.js","components/EmailList.js","components/EmailDetails.js","components/ReplyEditor.js","components/DarkModeToggle.js","components/Onebox.js","App.js","index.js"],"names":["Login","React","createElement","className","src","alt","onClick","handleLogin","window","location","href","AuthHandler","navigate","useNavigate","useEffect","urlParams","URLSearchParams","search","token","get","userEmail","userName","localStorage","setItem","alert","Sidebar","EmailList","_ref","onSelectEmail","emails","setEmails","useState","error","setError","async","getItem","response","fetch","headers","Authorization","data","json","status","err","fetchEmails","map","email","key","id","subject","fromName","Date","sentAt","toLocaleDateString","EmailDetails","emailDetails","setEmailDetails","threadId","fetchEmailDetails","Fragment","fromEmail","toName","toEmail","toLocaleString","dangerouslySetInnerHTML","__html","body","ReplyEditor","onSendReply","replyBody","setReplyBody","value","onChange","e","target","placeholder","replyData","to","from","inReplyTo","messageId","references","method","Content-Type","JSON","stringify","DarkModeToggle","toggleDarkMode","type","Onebox","selectedEmail","setSelectedEmail","darkMode","setDarkMode","handleSendReply","App","Router","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.15a4f9f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Login.css'; // Assuming you'll add custom styles in a CSS file\r\n\r\nconst Login = () => {\r\n    // Function to handle the Google login\r\n    const handleLogin = () => {\r\n        // Redirect the user to the Google login page\r\n        window.location.href = 'https://hiring.reachinbox.xyz/api/v1/auth/google-login?redirect_to=http://your-frontend.com/auth';\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-box\">\r\n                <img src=\"/logo.png\" alt=\"Reachinbox Logo\" className=\"logo\" />\r\n                <h1 className=\"login-title\">Create a new account</h1>\r\n                <button className=\"google-signup\" onClick={handleLogin}>\r\n                    <img src=\"/google-icon.png\" alt=\"Google Icon\" /> Sign Up with Google\r\n                </button>\r\n                <button className=\"create-account\">Create an Account</button>\r\n                <p className=\"signin-text\">\r\n                    Already have an account? <a href=\"/signin\">Sign In</a>\r\n                </p>\r\n            </div>\r\n            <footer className=\"login-footer\">\r\n                &copy; 2023 Reachinbox. All rights reserved.\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react'; // Import React and useEffect\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\r\n\r\nconst AuthHandler = () => {\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    useEffect(() => {\r\n        // Extract token from URL\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const token = urlParams.get('token');\r\n        const userEmail = urlParams.get('email'); // Assuming the email is passed in the URL\r\n        const userName = urlParams.get('name');   // Assuming the name is passed in the URL\r\n\r\n        if (token) {\r\n            // Store the token in localStorage\r\n            localStorage.setItem('bearerToken', token);\r\n\r\n            // Store the user's email and name in localStorage\r\n            if (userEmail) localStorage.setItem('userEmail', userEmail);\r\n            if (userName) localStorage.setItem('userName', userName);\r\n\r\n            // Redirect to the main application page (e.g., Onebox)\r\n            navigate('/onebox'); // Use navigate instead of history.push\r\n        } else {\r\n            // Handle error if token is missing\r\n            alert('Login failed. No token received.');\r\n        }\r\n    }, [navigate]); // Use navigate as a dependency\r\n\r\n    return <div>Logging you in...</div>;\r\n};\r\n\r\nexport default AuthHandler;\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-item\">\r\n                <img src=\"/icons/home-icon.png\" alt=\"Home\" />\r\n            </div>\r\n            <div className=\"sidebar-item\">\r\n                <img src=\"/icons/inbox-icon.png\" alt=\"Inbox\" />\r\n            </div>\r\n            <div className=\"sidebar-item\">\r\n                <img src=\"/icons/sent-icon.png\" alt=\"Sent\" />\r\n            </div>\r\n            <div className=\"sidebar-item\">\r\n                <img src=\"/icons/drafts-icon.png\" alt=\"Drafts\" />\r\n            </div>\r\n            <div className=\"sidebar-item\">\r\n                <img src=\"/icons/trash-icon.png\" alt=\"Trash\" />\r\n            </div>\r\n            {/* Add more icons as necessary */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './EmailList.css';\r\n\r\nconst EmailList = ({ onSelectEmail }) => {\r\n    const [emails, setEmails] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchEmails = async () => {\r\n            const token = localStorage.getItem('bearerToken'); // Get the token from localStorage\r\n\r\n            if (!token) {\r\n                alert(\"You're not logged in!\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch('https://hiring.reachinbox.xyz/api/v1/onebox/list', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                if (data.status === 200) {\r\n                    setEmails(data.data);\r\n                } else {\r\n                    setError(\"Failed to fetch emails.\");\r\n                }\r\n            } catch (err) {\r\n                setError(\"An error occurred while fetching emails.\");\r\n            }\r\n        };\r\n\r\n        fetchEmails();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"email-list\">\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {emails.map(email => (\r\n                <div \r\n                    key={email.id} \r\n                    className=\"email-item\" \r\n                    onClick={() => onSelectEmail(email)}\r\n                >\r\n                    <p className=\"email-subject\">{email.subject}</p>\r\n                    <p className=\"email-from\">{email.fromName} - {new Date(email.sentAt).toLocaleDateString()}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './EmailDetails.css';\r\n\r\nconst EmailDetails = ({ email }) => {\r\n    const [emailDetails, setEmailDetails] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchEmailDetails = async () => {\r\n            try {\r\n                const response = await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/${email.threadId}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer YOUR_BEARER_TOKEN`,\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                if (data.status === 200) {\r\n                    setEmailDetails(data.data);\r\n                } else {\r\n                    setError(\"Failed to fetch email details.\");\r\n                }\r\n            } catch (err) {\r\n                setError(\"An error occurred while fetching email details.\");\r\n            }\r\n        };\r\n\r\n        fetchEmailDetails();\r\n    }, [email.threadId]);\r\n\r\n    if (error) {\r\n        return <div className=\"error\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"email-details\">\r\n            {emailDetails ? (\r\n                <>\r\n                    <h2>{emailDetails.subject}</h2>\r\n                    <p><strong>From:</strong> {emailDetails.fromName} ({emailDetails.fromEmail})</p>\r\n                    <p><strong>To:</strong> {emailDetails.toName ? emailDetails.toName : \"You\"} ({emailDetails.toEmail})</p>\r\n                    <p><strong>Sent At:</strong> {new Date(emailDetails.sentAt).toLocaleString()}</p>\r\n                    <div className=\"email-body\" dangerouslySetInnerHTML={{ __html: emailDetails.body }} />\r\n                </>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailDetails;\r\n","import React, { useState } from 'react';\r\nimport './ReplyEditor.css';\r\n\r\nconst ReplyEditor = ({ email, onSendReply }) => {\r\n    const [replyBody, setReplyBody] = useState('');\r\n\r\n    // Retrieve the user's email and name from localStorage\r\n    const userEmail = localStorage.getItem('userEmail');\r\n    const userName = localStorage.getItem('userName');\r\n\r\n    const handleSendReply = async () => {\r\n        const replyData = {\r\n            toName: email.fromName,\r\n            to: email.fromEmail,\r\n            from: userEmail, // Use the user's email stored in localStorage\r\n            fromName: userName, // Use the user's name stored in localStorage\r\n            subject: `Re: ${email.subject}`,\r\n            body: replyBody,\r\n            inReplyTo: email.messageId,\r\n            references: [email.messageId],\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`https://hiring.reachinbox.xyz/api/v1/onebox/reply/${email.threadId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('bearerToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(replyData),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (data.status === 200) {\r\n                onSendReply();\r\n            } else {\r\n                alert(\"Failed to send reply.\");\r\n            }\r\n        } catch (error) {\r\n            alert(\"An error occurred while sending the reply.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reply-editor\">\r\n            <textarea \r\n                value={replyBody} \r\n                onChange={(e) => setReplyBody(e.target.value)} \r\n                placeholder=\"Write your reply here...\"\r\n            />\r\n            <button onClick={handleSendReply}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyEditor;\r\n","// src/components/DarkModeToggle.js\r\nimport React from 'react';\r\n\r\nconst DarkModeToggle = ({ toggleDarkMode }) => {\r\n  return (\r\n    <div className=\"dark-mode-toggle\">\r\n      <label>\r\n        Dark Mode\r\n        <input type=\"checkbox\" onChange={toggleDarkMode} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n","import React, { useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport EmailList from './EmailList';\r\nimport EmailDetails from './EmailDetails';\r\nimport ReplyEditor from './ReplyEditor';\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport './Onebox.css';\r\n\r\nconst Onebox = () => {\r\n    const [selectedEmail, setSelectedEmail] = useState(null);\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n    const handleSelectEmail = (email) => {\r\n        setSelectedEmail(email);\r\n    };\r\n\r\n    const handleSendReply = () => {\r\n        // Clear selected email after sending reply\r\n        setSelectedEmail(null);\r\n    };\r\n\r\n    return (\r\n        <div className={`onebox-container ${darkMode ? 'dark' : 'light'}`}>\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <div className=\"top-bar\">\r\n                    <div className=\"workspace-title\">Onebox</div>\r\n                    <DarkModeToggle darkMode={darkMode} setDarkMode={setDarkMode} />\r\n                    <div className=\"workspace-name\">Tim's Workspace</div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <EmailList onSelectEmail={handleSelectEmail} />\r\n                    {selectedEmail ? (\r\n                        <>\r\n                            <EmailDetails email={selectedEmail} />\r\n                            <ReplyEditor email={selectedEmail} onSendReply={handleSendReply} />\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"no-email-selected\">\r\n                            <img src=\"/inbox-empty.png\" alt=\"No Emails\" className=\"empty-inbox-image\" />\r\n                            <p>It's the beginning of a legendary sales pipeline</p>\r\n                            <p>When you have inbound E-mails you'll see them here</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Onebox;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport AuthHandler from './components/AuthHandler';\r\nimport Onebox from './components/Onebox';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Login />} />\r\n                <Route path=\"/auth\" element={<AuthHandler />} />\r\n                <Route path=\"/onebox\" element={<Onebox />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;  // Make sure this line exists\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './styles/styles.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}